trigger: none

pool:
  name: LinuxPool

variables:
  - group: dhanu-keyvault
  TF_WORKING_DIR: 'virtualMachine'

stages:
  - stage: infra
    jobs:
      - job: terraformJob
        displayName: "Provision Infrastructure with Terraform"
        steps:
          - checkout: self
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(TF_WORKING_DIR)'
              backendServiceArm: 'DjAzureSPNConnection'
              backendAzureRmStorageAccountName: 'dhanustorage03'
              backendAzureRmContainerName: 'dhanucontainer'
              backendAzureRmKey: 'vmstorage123.tfstate'
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(TF_WORKING_DIR)'
              environmentServiceNameAzureRM: 'DjAzureSPNConnection'
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(TF_WORKING_DIR)'
              environmentServiceNameAzureRM: 'DjAzureSPNConnection'
              
          - script: |
              cd $(TF_WORKING_DIR)
              mkdir -p /home/dhanu/shared/ansible
              terraform output -raw ansible_inventory > /home/dhanu/shared/ansible/inventory.ini
              ls
  - stage: config
    dependsOn: infra
    jobs:
      - job: ansibleJob
        displayName: "Configure VMs with Ansible"
        steps:
          - checkout: self

          - script: |
              export ANSIBLE_HOST_KEY_CHECKING=False
              ansible-playbook -i /home/dhanu/shared/ansible/inventory.ini ansible/playbook.yml
            displayName: "Run Ansible Playbook"

  - stage: Docker
    dependsOn: Ansible
    jobs:
      - job: BuildPush
        pool:
          name: LinuxPool
          steps:
            - task: Docker@2
              inputs:
                containerRegistry: 'docker0395'
                repository: 'dhanu0395/dockervm'
                command: 'buildAndPush'
                Dockerfile: '$(Build.SourcesDirectory)/docker/Dockerfile'
                buildContext: '$(Build.SourcesDirectory)'
                tags: |
                  latest   

  - stage: Deploy
    dependsOn: Docker
    jobs:
      - job: DeployApp
        pool:
          name: LinuxPool
          steps:
            - script: |
                sshpass -p '$(vmpassword)' ssh -o StrictHostKeyChecking=no azureuser@$(terraform output -raw vm_ip) "
                  docker login -u dhanu0395 -p $(dockerPassword)
                  docker pull dhanu0395/dockervm:latest
                  docker run -d -p 80:80 myacr.azurecr.io/myapp:latest"
              displayName: Run Docker Container          

